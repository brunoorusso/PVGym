{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, defineInjectable } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\n\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n\n\nclass Directionality {\n  /**\n   * @param {?=} _document\n   */\n  constructor(_document) {\n    /**\n     * The current 'ltr' or 'rtl' value.\n     */\n    this.value = 'ltr';\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     */\n\n    this.change = new EventEmitter();\n\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n\n      /** @type {?} */\n      const bodyDir = _document.body ? _document.body.dir : null;\n      /** @type {?} */\n\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      /** @type {?} */\n\n      const value = bodyDir || htmlDir;\n      this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\nDirectionality.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @nocollapse */\n\nDirectionality.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DIR_DOCUMENT]\n  }]\n}];\n/** @nocollapse */\n\n\nDirectionality.ngInjectableDef = defineInjectable({\n  factory: function Directionality_Factory() {\n    return new Directionality(inject(DIR_DOCUMENT, 8));\n  },\n  token: Directionality,\n  providedIn: \"root\"\n});\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n\nclass Dir {\n  constructor() {\n    /**\n     * Normalized direction that accounts for invalid/unsupported values.\n     */\n    this._dir = 'ltr';\n    /**\n     * Whether the `value` has been set to its initial value.\n     */\n\n    this._isInitialized = false;\n    /**\n     * Event emitted when the direction changes.\n     */\n\n    this.change = new EventEmitter();\n  }\n  /**\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  get dir() {\n    return this._dir;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set dir(value) {\n    /** @type {?} */\n    const old = this._dir;\n    /** @type {?} */\n\n    const normalizedValue = value ? value.toLowerCase() : value;\n    this._rawDir = value;\n    this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';\n\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n  /**\n   * Current layout direction of the element.\n   * @return {?}\n   */\n\n\n  get value() {\n    return this.dir;\n  }\n  /**\n   * Initialize once default value has been set.\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\nDir.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[dir]',\n    providers: [{\n      provide: Directionality,\n      useExisting: Dir\n    }],\n    host: {\n      '[attr.dir]': '_rawDir'\n    },\n    exportAs: 'dir'\n  }]\n}];\nDir.propDecorators = {\n  change: [{\n    type: Output,\n    args: ['dirChange']\n  }],\n  dir: [{\n    type: Input\n  }]\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nclass BidiModule {}\n\nBidiModule.decorators = [{\n  type: NgModule,\n  args: [{\n    exports: [Dir],\n    declarations: [Dir]\n  }]\n}];\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };","map":{"version":3,"names":["DOCUMENT","inject","InjectionToken","EventEmitter","Inject","Injectable","Optional","Directive","Output","Input","NgModule","defineInjectable","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","constructor","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","decorators","type","args","ctorParameters","undefined","ngInjectableDef","Directionality_Factory","token","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","ngAfterContentInit","selector","providers","provide","useExisting","host","exportAs","propDecorators","BidiModule","exports","declarations","ɵa"],"sources":["C:/Users/ismae/Desktop/PVGym/PVGymAngularClient/ClientApp/node_modules/@angular/cdk/esm2015/bidi.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ngInjectableDef = defineInjectable({ factory: function Directionality_Factory() { return new Directionality(inject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.decorators = [\n    { type: Directive, args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir',\n            },] },\n];\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [Dir],\n                declarations: [Dir],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}