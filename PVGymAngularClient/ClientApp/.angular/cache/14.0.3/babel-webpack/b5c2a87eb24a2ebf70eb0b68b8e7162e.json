{"ast":null,"code":"import { isPlatformBrowser } from '@angular/common';\nimport { Directive, Renderer2, ElementRef, Output, Input, EventEmitter, NgZone, Inject, PLATFORM_ID, Optional, NgModule } from '@angular/core';\nimport { Subject, Observable, merge, EMPTY, fromEvent } from 'rxjs';\nimport { map, mergeMap, takeUntil, filter, pairwise, take, share, auditTime, switchMap, startWith, tap } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @hidden\n * @type {?}\n */\n\nimport * as Éµngcc0 from '@angular/core';\n\nconst IS_TOUCH_DEVICE = (() => {\n  // In case we're in Node.js environment.\n  if (typeof window === 'undefined') {\n    return false;\n  } else {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n  }\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value1\n * @param {?} value2\n * @param {?=} precision\n * @return {?}\n */\n\n\nfunction isNumberCloseTo(value1, value2, precision = 3) {\n  /** @type {?} */\n  const diff = Math.abs(value1 - value2);\n  return diff < precision;\n}\n/**\n * @param {?} startingRect\n * @param {?} edges\n * @param {?} clientX\n * @param {?} clientY\n * @return {?}\n */\n\n\nfunction getNewBoundingRectangle(startingRect, edges, clientX, clientY) {\n  /** @type {?} */\n  const newBoundingRect = {\n    top: startingRect.top,\n    bottom: startingRect.bottom,\n    left: startingRect.left,\n    right: startingRect.right\n  };\n\n  if (edges.top) {\n    newBoundingRect.top += clientY;\n  }\n\n  if (edges.bottom) {\n    newBoundingRect.bottom += clientY;\n  }\n\n  if (edges.left) {\n    newBoundingRect.left += clientX;\n  }\n\n  if (edges.right) {\n    newBoundingRect.right += clientX;\n  }\n\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n  return newBoundingRect;\n}\n/**\n * @param {?} element\n * @param {?} ghostElementPositioning\n * @return {?}\n */\n\n\nfunction getElementRect(element, ghostElementPositioning) {\n  /** @type {?} */\n  let translateX = 0;\n  /** @type {?} */\n\n  let translateY = 0;\n  /** @type {?} */\n\n  const style = element.nativeElement.style;\n  /** @type {?} */\n\n  const transformProperties = ['transform', '-ms-transform', '-moz-transform', '-o-transform'];\n  /** @type {?} */\n\n  const transform = transformProperties.map(property => style[property]).find(value => !!value);\n\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$1');\n    translateY = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom: element.nativeElement.offsetHeight + element.nativeElement.offsetTop - translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right: element.nativeElement.offsetWidth + element.nativeElement.offsetLeft - translateX\n    };\n  } else {\n    /** @type {?} */\n    const boundingRect = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}) {\n  return clientY >= rect.top && clientY <= rect.bottom;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction isWithinBoundingX({\n  clientX,\n  rect\n}) {\n  return clientX >= rect.left && clientX <= rect.right;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction getResizeEdges({\n  clientX,\n  clientY,\n  elm,\n  allowedEdges,\n  cursorPrecision\n}) {\n  /** @type {?} */\n  const elmPosition = elm.nativeElement.getBoundingClientRect();\n  /** @type {?} */\n\n  const edges = {};\n\n  if (allowedEdges.left && isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) && isWithinBoundingY({\n    clientY,\n    rect: elmPosition\n  })) {\n    edges.left = true;\n  }\n\n  if (allowedEdges.right && isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) && isWithinBoundingY({\n    clientY,\n    rect: elmPosition\n  })) {\n    edges.right = true;\n  }\n\n  if (allowedEdges.top && isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) && isWithinBoundingX({\n    clientX,\n    rect: elmPosition\n  })) {\n    edges.top = true;\n  }\n\n  if (allowedEdges.bottom && isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) && isWithinBoundingX({\n    clientX,\n    rect: elmPosition\n  })) {\n    edges.bottom = true;\n  }\n\n  return edges;\n}\n/** @type {?} */\n\n\nconst DEFAULT_RESIZE_CURSORS = Object.freeze({\n  topLeft: 'nw-resize',\n  topRight: 'ne-resize',\n  bottomLeft: 'sw-resize',\n  bottomRight: 'se-resize',\n  leftOrRight: 'col-resize',\n  topOrBottom: 'row-resize'\n});\n/**\n * @param {?} edges\n * @param {?} cursors\n * @return {?}\n */\n\nfunction getResizeCursor(edges, cursors) {\n  if (edges.left && edges.top) {\n    return cursors.topLeft;\n  } else if (edges.right && edges.top) {\n    return cursors.topRight;\n  } else if (edges.left && edges.bottom) {\n    return cursors.bottomLeft;\n  } else if (edges.right && edges.bottom) {\n    return cursors.bottomRight;\n  } else if (edges.left || edges.right) {\n    return cursors.leftOrRight;\n  } else if (edges.top || edges.bottom) {\n    return cursors.topOrBottom;\n  } else {\n    return '';\n  }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction getEdgesDiff({\n  edges,\n  initialRectangle,\n  newRectangle\n}) {\n  /** @type {?} */\n  const edgesDiff = {};\n  Object.keys(edges).forEach(edge => {\n    edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n  });\n  return edgesDiff;\n}\n/** @type {?} */\n\n\nconst RESIZE_ACTIVE_CLASS = 'resize-active';\n/** @type {?} */\n\nconst RESIZE_LEFT_HOVER_CLASS = 'resize-left-hover';\n/** @type {?} */\n\nconst RESIZE_RIGHT_HOVER_CLASS = 'resize-right-hover';\n/** @type {?} */\n\nconst RESIZE_TOP_HOVER_CLASS = 'resize-top-hover';\n/** @type {?} */\n\nconst RESIZE_BOTTOM_HOVER_CLASS = 'resize-bottom-hover';\n/** @type {?} */\n\nconst RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';\n/** @type {?} */\n\nconst MOUSE_MOVE_THROTTLE_MS = 50;\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\n\nclass ResizableDirective {\n  /**\n   * @hidden\n   * @param {?} platformId\n   * @param {?} renderer\n   * @param {?} elm\n   * @param {?} zone\n   */\n  constructor(platformId, renderer, elm, zone) {\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.elm = elm;\n    this.zone = zone;\n    /**\n     * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n     * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize\n     */\n\n    this.resizeEdges = {};\n    /**\n     * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n     */\n\n    this.enableGhostResize = false;\n    /**\n     * A snap grid that resize events will be locked to.\n     *\n     * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n     */\n\n    this.resizeSnapGrid = {};\n    /**\n     * The mouse cursors that will be set on the resize edges\n     */\n\n    this.resizeCursors = DEFAULT_RESIZE_CURSORS;\n    /**\n     * Mouse over thickness to active cursor.\n     * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element\n     */\n\n    this.resizeCursorPrecision = 3;\n    /**\n     * Define the positioning of the ghost element (can be fixed or absolute)\n     */\n\n    this.ghostElementPositioning = 'fixed';\n    /**\n     * Allow elements to be resized to negative dimensions\n     */\n\n    this.allowNegativeResizes = false;\n    /**\n     * The mouse move throttle in milliseconds, default: 50 ms\n     */\n\n    this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;\n    /**\n     * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n     */\n\n    this.resizeStart = new EventEmitter();\n    /**\n     * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n     */\n\n    this.resizing = new EventEmitter();\n    /**\n     * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n     */\n\n    this.resizeEnd = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.mouseup = new Subject();\n    /**\n     * @hidden\n     */\n\n    this.mousedown = new Subject();\n    /**\n     * @hidden\n     */\n\n    this.mousemove = new Subject();\n    this.destroy$ = new Subject();\n    this.resizeEdges$ = new Subject();\n    this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    /** @type {?} */\n    const mousedown$ = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n    /** @type {?} */\n\n    const mousemove$ = merge(this.pointerEventListeners.pointerMove, this.mousemove).pipe(tap(({\n      event\n    }) => {\n      if (currentResize) {\n        try {\n          event.preventDefault();\n        } catch (e) {// just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\n          // browser does nothing except of writing errors to console\n        }\n      }\n    }), share());\n    /** @type {?} */\n\n    const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n    /** @type {?} */\n\n    let currentResize;\n    /** @type {?} */\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n    /** @type {?} */\n\n\n    const getResizeCursors = () => {\n      return Object.assign({}, DEFAULT_RESIZE_CURSORS, this.resizeCursors);\n    };\n\n    this.resizeEdges$.pipe(startWith(this.resizeEdges), map(() => {\n      return this.resizeEdges && Object.keys(this.resizeEdges).some(edge => !!this.resizeEdges[edge]);\n    }), switchMap(legacyResizeEdgesEnabled => legacyResizeEdgesEnabled ? mousemove$ : EMPTY), auditTime(this.mouseMoveThrottleMS), takeUntil(this.destroy$)).subscribe(({\n      clientX,\n      clientY\n    }) => {\n      /** @type {?} */\n      const resizeEdges = getResizeEdges({\n        clientX,\n        clientY,\n        elm: this.elm,\n        allowedEdges: this.resizeEdges,\n        cursorPrecision: this.resizeCursorPrecision\n      });\n      /** @type {?} */\n\n      const resizeCursors = getResizeCursors();\n\n      if (!currentResize) {\n        /** @type {?} */\n        const cursor = getResizeCursor(resizeEdges, resizeCursors);\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n      }\n\n      this.setElementClass(this.elm, RESIZE_LEFT_HOVER_CLASS, resizeEdges.left === true);\n      this.setElementClass(this.elm, RESIZE_RIGHT_HOVER_CLASS, resizeEdges.right === true);\n      this.setElementClass(this.elm, RESIZE_TOP_HOVER_CLASS, resizeEdges.top === true);\n      this.setElementClass(this.elm, RESIZE_BOTTOM_HOVER_CLASS, resizeEdges.bottom === true);\n    });\n    /** @type {?} */\n\n    const mousedrag = mousedown$.pipe(mergeMap(startCoords => {\n      /**\n       * @param {?} moveCoords\n       * @return {?}\n       */\n      function getDiff(moveCoords) {\n        return {\n          clientX: moveCoords.clientX - startCoords.clientX,\n          clientY: moveCoords.clientY - startCoords.clientY\n        };\n      }\n      /** @type {?} */\n\n\n      const getSnapGrid = () => {\n        /** @type {?} */\n        const snapGrid = {\n          x: 1,\n          y: 1\n        };\n\n        if (currentResize) {\n          if (this.resizeSnapGrid.left && currentResize.edges.left) {\n            snapGrid.x = +this.resizeSnapGrid.left;\n          } else if (this.resizeSnapGrid.right && currentResize.edges.right) {\n            snapGrid.x = +this.resizeSnapGrid.right;\n          }\n\n          if (this.resizeSnapGrid.top && currentResize.edges.top) {\n            snapGrid.y = +this.resizeSnapGrid.top;\n          } else if (this.resizeSnapGrid.bottom && currentResize.edges.bottom) {\n            snapGrid.y = +this.resizeSnapGrid.bottom;\n          }\n        }\n\n        return snapGrid;\n      };\n      /**\n       * @param {?} coords\n       * @param {?} snapGrid\n       * @return {?}\n       */\n\n\n      function getGrid(coords, snapGrid) {\n        return {\n          x: Math.ceil(coords.clientX / snapGrid.x),\n          y: Math.ceil(coords.clientY / snapGrid.y)\n        };\n      }\n\n      return (\n        /** @type {?} */\n        merge(mousemove$.pipe(take(1)).pipe(map(coords => [, coords])), mousemove$.pipe(pairwise())).pipe(map(([previousCoords, newCoords]) => {\n          return [previousCoords ? getDiff(previousCoords) : previousCoords, getDiff(newCoords)];\n        })).pipe(filter(([previousCoords, newCoords]) => {\n          if (!previousCoords) {\n            return true;\n          }\n          /** @type {?} */\n\n\n          const snapGrid = getSnapGrid();\n          /** @type {?} */\n\n          const previousGrid = getGrid(previousCoords, snapGrid);\n          /** @type {?} */\n\n          const newGrid = getGrid(newCoords, snapGrid);\n          return previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y;\n        })).pipe(map(([, newCoords]) => {\n          /** @type {?} */\n          const snapGrid = getSnapGrid();\n          return {\n            clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n            clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n          };\n        })).pipe(takeUntil(merge(mouseup$, mousedown$)))\n      );\n    })).pipe(filter(() => !!currentResize));\n    mousedrag.pipe(map(({\n      clientX,\n      clientY\n    }) => {\n      return getNewBoundingRectangle(\n      /** @type {?} */\n      currentResize.startingRect,\n      /** @type {?} */\n      currentResize.edges, clientX, clientY);\n    })).pipe(filter(newBoundingRect => {\n      return this.allowNegativeResizes || !!(newBoundingRect.height && newBoundingRect.width && newBoundingRect.height > 0 && newBoundingRect.width > 0);\n    })).pipe(filter(newBoundingRect => {\n      return this.validateResize ? this.validateResize({\n        rectangle: newBoundingRect,\n        edges: getEdgesDiff({\n          edges:\n          /** @type {?} */\n          currentResize.edges,\n          initialRectangle:\n          /** @type {?} */\n          currentResize.startingRect,\n          newRectangle: newBoundingRect\n        })\n      }) : true;\n    }), takeUntil(this.destroy$)).subscribe(newBoundingRect => {\n      if (currentResize && currentResize.clonedNode) {\n        this.renderer.setStyle(currentResize.clonedNode, 'height', `${newBoundingRect.height}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'width', `${newBoundingRect.width}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'top', `${newBoundingRect.top}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'left', `${newBoundingRect.left}px`);\n      }\n\n      if (this.resizing.observers.length > 0) {\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges:\n              /** @type {?} */\n              currentResize.edges,\n              initialRectangle:\n              /** @type {?} */\n              currentResize.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n      }\n\n      /** @type {?} */\n      currentResize.currentRect = newBoundingRect;\n    });\n    mousedown$.pipe(map(({\n      clientX,\n      clientY,\n      edges\n    }) => {\n      return edges || getResizeEdges({\n        clientX,\n        clientY,\n        elm: this.elm,\n        allowedEdges: this.resizeEdges,\n        cursorPrecision: this.resizeCursorPrecision\n      });\n    })).pipe(filter(edges => {\n      return Object.keys(edges).length > 0;\n    }), takeUntil(this.destroy$)).subscribe(edges => {\n      if (currentResize) {\n        removeGhostElement();\n      }\n      /** @type {?} */\n\n\n      const startingRect = getElementRect(this.elm, this.ghostElementPositioning);\n      currentResize = {\n        edges,\n        startingRect,\n        currentRect: startingRect\n      };\n      /** @type {?} */\n\n      const resizeCursors = getResizeCursors();\n      /** @type {?} */\n\n      const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n      this.renderer.setStyle(document.body, 'cursor', cursor);\n      this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n\n      if (this.enableGhostResize) {\n        currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n        this.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'hidden');\n        this.renderer.setStyle(currentResize.clonedNode, 'position', this.ghostElementPositioning);\n        this.renderer.setStyle(currentResize.clonedNode, 'left', `${currentResize.startingRect.left}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'top', `${currentResize.startingRect.top}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'height', `${currentResize.startingRect.height}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'width', `${currentResize.startingRect.width}px`);\n        this.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));\n        this.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);\n\n        /** @type {?} */\n        currentResize.clonedNode.scrollTop =\n        /** @type {?} */\n        currentResize.startingRect.scrollTop;\n\n        /** @type {?} */\n        currentResize.clonedNode.scrollLeft =\n        /** @type {?} */\n        currentResize.startingRect.scrollLeft;\n      }\n\n      if (this.resizeStart.observers.length > 0) {\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      }\n    });\n    mouseup$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n\n        if (this.resizeEnd.observers.length > 0) {\n          this.zone.run(() => {\n            this.resizeEnd.emit({\n              edges: getEdgesDiff({\n                edges:\n                /** @type {?} */\n                currentResize.edges,\n                initialRectangle:\n                /** @type {?} */\n                currentResize.startingRect,\n                newRectangle:\n                /** @type {?} */\n                currentResize.currentRect\n              }),\n              rectangle:\n              /** @type {?} */\n              currentResize.currentRect\n            });\n          });\n        }\n\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n  /**\n   * @hidden\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    if (changes.resizeEdges) {\n      this.resizeEdges$.next(this.resizeEdges);\n    }\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    // browser check for angular universal, because it doesn't know what document is\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(document.body, 'cursor', '');\n    }\n\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.resizeEdges$.complete();\n    this.destroy$.next();\n  }\n  /**\n   * @private\n   * @param {?} elm\n   * @param {?} name\n   * @param {?} add\n   * @return {?}\n   */\n\n\n  setElementClass(elm, name, add) {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n\n}\n\nResizableDirective.Éµfac = function ResizableDirective_Factory(t) {\n  return new (t || ResizableDirective)(Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nResizableDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: ResizableDirective,\n  selectors: [[\"\", \"mwlResizable\", \"\"]],\n  inputs: {\n    resizeEdges: \"resizeEdges\",\n    enableGhostResize: \"enableGhostResize\",\n    resizeSnapGrid: \"resizeSnapGrid\",\n    resizeCursors: \"resizeCursors\",\n    resizeCursorPrecision: \"resizeCursorPrecision\",\n    ghostElementPositioning: \"ghostElementPositioning\",\n    allowNegativeResizes: \"allowNegativeResizes\",\n    mouseMoveThrottleMS: \"mouseMoveThrottleMS\",\n    validateResize: \"validateResize\"\n  },\n  outputs: {\n    resizeStart: \"resizeStart\",\n    resizing: \"resizing\",\n    resizeEnd: \"resizeEnd\"\n  },\n  exportAs: [\"mwlResizable\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n/** @nocollapse */\n\nResizableDirective.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: Renderer2\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}];\n\nResizableDirective.propDecorators = {\n  validateResize: [{\n    type: Input\n  }],\n  resizeEdges: [{\n    type: Input\n  }],\n  enableGhostResize: [{\n    type: Input\n  }],\n  resizeSnapGrid: [{\n    type: Input\n  }],\n  resizeCursors: [{\n    type: Input\n  }],\n  resizeCursorPrecision: [{\n    type: Input\n  }],\n  ghostElementPositioning: [{\n    type: Input\n  }],\n  allowNegativeResizes: [{\n    type: Input\n  }],\n  mouseMoveThrottleMS: [{\n    type: Input\n  }],\n  resizeStart: [{\n    type: Output\n  }],\n  resizing: [{\n    type: Output\n  }],\n  resizeEnd: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlResizable]',\n      exportAs: 'mwlResizable'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Éµngcc0.Renderer2\n    }, {\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    resizeEdges: [{\n      type: Input\n    }],\n    enableGhostResize: [{\n      type: Input\n    }],\n    resizeSnapGrid: [{\n      type: Input\n    }],\n    resizeCursors: [{\n      type: Input\n    }],\n    resizeCursorPrecision: [{\n      type: Input\n    }],\n    ghostElementPositioning: [{\n      type: Input\n    }],\n    allowNegativeResizes: [{\n      type: Input\n    }],\n    mouseMoveThrottleMS: [{\n      type: Input\n    }],\n    resizeStart: [{\n      type: Output\n    }],\n    resizing: [{\n      type: Output\n    }],\n    resizeEnd: [{\n      type: Output\n    }],\n    validateResize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass PointerEventListeners {\n  // tslint:disable-line\n\n  /**\n   * @param {?} renderer\n   * @param {?} zone\n   * @return {?}\n   */\n  static getInstance(renderer, zone) {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(renderer, zone);\n    }\n\n    return PointerEventListeners.instance;\n  }\n  /**\n   * @param {?} renderer\n   * @param {?} zone\n   */\n\n\n  constructor(renderer, zone) {\n    this.pointerDown = new Observable(observer => {\n      /** @type {?} */\n      let unsubscribeMouseDown;\n      /** @type {?} */\n\n      let unsubscribeTouchStart;\n      zone.runOutsideAngular(() => {\n        unsubscribeMouseDown = renderer.listen('document', 'mousedown', event => {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event\n          });\n        });\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchStart = renderer.listen('document', 'touchstart', event => {\n            observer.next({\n              clientX: event.touches[0].clientX,\n              clientY: event.touches[0].clientY,\n              event\n            });\n          });\n        }\n      });\n      return () => {\n        unsubscribeMouseDown();\n\n        if (IS_TOUCH_DEVICE) {\n          /** @type {?} */\n          unsubscribeTouchStart();\n        }\n      };\n    }).pipe(share());\n    this.pointerMove = new Observable(observer => {\n      /** @type {?} */\n      let unsubscribeMouseMove;\n      /** @type {?} */\n\n      let unsubscribeTouchMove;\n      zone.runOutsideAngular(() => {\n        unsubscribeMouseMove = renderer.listen('document', 'mousemove', event => {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event\n          });\n        });\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchMove = renderer.listen('document', 'touchmove', event => {\n            observer.next({\n              clientX: event.targetTouches[0].clientX,\n              clientY: event.targetTouches[0].clientY,\n              event\n            });\n          });\n        }\n      });\n      return () => {\n        unsubscribeMouseMove();\n\n        if (IS_TOUCH_DEVICE) {\n          /** @type {?} */\n          unsubscribeTouchMove();\n        }\n      };\n    }).pipe(share());\n    this.pointerUp = new Observable(observer => {\n      /** @type {?} */\n      let unsubscribeMouseUp;\n      /** @type {?} */\n\n      let unsubscribeTouchEnd;\n      /** @type {?} */\n\n      let unsubscribeTouchCancel;\n      zone.runOutsideAngular(() => {\n        unsubscribeMouseUp = renderer.listen('document', 'mouseup', event => {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event\n          });\n        });\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchEnd = renderer.listen('document', 'touchend', event => {\n            observer.next({\n              clientX: event.changedTouches[0].clientX,\n              clientY: event.changedTouches[0].clientY,\n              event\n            });\n          });\n          unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', event => {\n            observer.next({\n              clientX: event.changedTouches[0].clientX,\n              clientY: event.changedTouches[0].clientY,\n              event\n            });\n          });\n        }\n      });\n      return () => {\n        unsubscribeMouseUp();\n\n        if (IS_TOUCH_DEVICE) {\n          /** @type {?} */\n          unsubscribeTouchEnd();\n\n          /** @type {?} */\n          unsubscribeTouchCancel();\n        }\n      };\n    }).pipe(share());\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\n\n\nclass ResizeHandleDirective {\n  /**\n   * @param {?} renderer\n   * @param {?} element\n   * @param {?} zone\n   * @param {?} resizableDirective\n   */\n  constructor(renderer, element, zone, resizableDirective) {\n    this.renderer = renderer;\n    this.element = element;\n    this.zone = zone;\n    this.resizableDirective = resizableDirective;\n    /**\n     * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n     */\n\n    this.resizeEdges = {};\n    this.eventListeners = {};\n    this.destroy$ = new Subject();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      this.listenOnTheHost('mousedown').subscribe(event => {\n        this.onMousedown(event, event.clientX, event.clientY);\n      });\n      this.listenOnTheHost('mouseup').subscribe(event => {\n        this.onMouseup(event.clientX, event.clientY);\n      });\n\n      if (IS_TOUCH_DEVICE) {\n        this.listenOnTheHost('touchstart').subscribe(event => {\n          this.onMousedown(event, event.touches[0].clientX, event.touches[0].clientY);\n        });\n        merge(this.listenOnTheHost('touchend'), this.listenOnTheHost('touchcancel')).subscribe(event => {\n          this.onMouseup(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n        });\n      }\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.unsubscribeEventListeners();\n  }\n  /**\n   * @hidden\n   * @param {?} event\n   * @param {?} clientX\n   * @param {?} clientY\n   * @return {?}\n   */\n\n\n  onMousedown(event, clientX, clientY) {\n    event.preventDefault();\n\n    if (!this.eventListeners.touchmove) {\n      this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', touchMoveEvent => {\n        this.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);\n      });\n    }\n\n    if (!this.eventListeners.mousemove) {\n      this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', mouseMoveEvent => {\n        this.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);\n      });\n    }\n\n    this.resizable.mousedown.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges\n    });\n  }\n  /**\n   * @hidden\n   * @param {?} clientX\n   * @param {?} clientY\n   * @return {?}\n   */\n\n\n  onMouseup(clientX, clientY) {\n    this.unsubscribeEventListeners();\n    this.resizable.mouseup.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges\n    });\n  } // directive might be passed from DI or as an input\n\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  get resizable() {\n    return this.resizableDirective || this.resizableContainer;\n  }\n  /**\n   * @private\n   * @param {?} event\n   * @param {?} clientX\n   * @param {?} clientY\n   * @return {?}\n   */\n\n\n  onMousemove(event, clientX, clientY) {\n    this.resizable.mousemove.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges,\n      event\n    });\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  unsubscribeEventListeners() {\n    Object.keys(this.eventListeners).forEach(type => {\n      /** @type {?} */\n      this.eventListeners[type]();\n      delete this.eventListeners[type];\n    });\n  }\n  /**\n   * @private\n   * @template T\n   * @param {?} eventName\n   * @return {?}\n   */\n\n\n  listenOnTheHost(eventName) {\n    return fromEvent(this.element.nativeElement, eventName).pipe(takeUntil(this.destroy$));\n  }\n\n}\n\nResizeHandleDirective.Éµfac = function ResizeHandleDirective_Factory(t) {\n  return new (t || ResizeHandleDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(ResizableDirective, 8));\n};\n\nResizeHandleDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: ResizeHandleDirective,\n  selectors: [[\"\", \"mwlResizeHandle\", \"\"]],\n  inputs: {\n    resizeEdges: \"resizeEdges\",\n    resizableContainer: \"resizableContainer\"\n  }\n});\n/** @nocollapse */\n\nResizeHandleDirective.ctorParameters = () => [{\n  type: Renderer2\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: ResizableDirective,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nResizeHandleDirective.propDecorators = {\n  resizeEdges: [{\n    type: Input\n  }],\n  resizableContainer: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizeHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlResizeHandle]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.Renderer2\n    }, {\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }, {\n      type: ResizableDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    resizeEdges: [{\n      type: Input\n    }],\n    resizableContainer: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass ResizableModule {}\n\nResizableModule.Éµfac = function ResizableModule_Factory(t) {\n  return new (t || ResizableModule)();\n};\n\nResizableModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: ResizableModule\n});\nResizableModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ResizableDirective, ResizeHandleDirective],\n      exports: [ResizableDirective, ResizeHandleDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(ResizableModule, {\n    declarations: [ResizableDirective, ResizeHandleDirective],\n    exports: [ResizableDirective, ResizeHandleDirective]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ResizableDirective, ResizeHandleDirective, ResizableModule };","map":{"version":3,"names":["isPlatformBrowser","Directive","Renderer2","ElementRef","Output","Input","EventEmitter","NgZone","Inject","PLATFORM_ID","Optional","NgModule","Subject","Observable","merge","EMPTY","fromEvent","map","mergeMap","takeUntil","filter","pairwise","take","share","auditTime","switchMap","startWith","tap","Éµngcc0","IS_TOUCH_DEVICE","window","navigator","maxTouchPoints","msMaxTouchPoints","isNumberCloseTo","value1","value2","precision","diff","Math","abs","getNewBoundingRectangle","startingRect","edges","clientX","clientY","newBoundingRect","top","bottom","left","right","height","width","getElementRect","element","ghostElementPositioning","translateX","translateY","style","nativeElement","transformProperties","transform","property","find","value","includes","replace","offsetHeight","offsetWidth","offsetTop","offsetLeft","boundingRect","getBoundingClientRect","scrollTop","scrollLeft","isWithinBoundingY","rect","isWithinBoundingX","getResizeEdges","elm","allowedEdges","cursorPrecision","elmPosition","DEFAULT_RESIZE_CURSORS","Object","freeze","topLeft","topRight","bottomLeft","bottomRight","leftOrRight","topOrBottom","getResizeCursor","cursors","getEdgesDiff","initialRectangle","newRectangle","edgesDiff","keys","forEach","edge","RESIZE_ACTIVE_CLASS","RESIZE_LEFT_HOVER_CLASS","RESIZE_RIGHT_HOVER_CLASS","RESIZE_TOP_HOVER_CLASS","RESIZE_BOTTOM_HOVER_CLASS","RESIZE_GHOST_ELEMENT_CLASS","MOUSE_MOVE_THROTTLE_MS","ResizableDirective","constructor","platformId","renderer","zone","resizeEdges","enableGhostResize","resizeSnapGrid","resizeCursors","resizeCursorPrecision","allowNegativeResizes","mouseMoveThrottleMS","resizeStart","resizing","resizeEnd","mouseup","mousedown","mousemove","destroy$","resizeEdges$","pointerEventListeners","PointerEventListeners","getInstance","ngOnInit","mousedown$","pointerDown","mousemove$","pointerMove","pipe","event","currentResize","preventDefault","e","mouseup$","pointerUp","removeGhostElement","clonedNode","parentElement","removeChild","setStyle","getResizeCursors","assign","some","legacyResizeEdgesEnabled","subscribe","cursor","setElementClass","mousedrag","startCoords","getDiff","moveCoords","getSnapGrid","snapGrid","x","y","getGrid","coords","ceil","previousCoords","newCoords","previousGrid","newGrid","round","validateResize","rectangle","observers","length","run","emit","currentRect","document","body","cloneNode","appendChild","addClass","removeClass","ngOnChanges","changes","next","ngOnDestroy","complete","name","add","Éµfac","ResizableDirective_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","type","selectors","inputs","outputs","exportAs","features","ÉµÉµNgOnChangesFeature","ctorParameters","undefined","decorators","args","propDecorators","ngDevMode","ÉµsetClassMetadata","selector","instance","observer","unsubscribeMouseDown","unsubscribeTouchStart","runOutsideAngular","listen","touches","unsubscribeMouseMove","unsubscribeTouchMove","targetTouches","unsubscribeMouseUp","unsubscribeTouchEnd","unsubscribeTouchCancel","changedTouches","ResizeHandleDirective","resizableDirective","eventListeners","listenOnTheHost","onMousedown","onMouseup","unsubscribeEventListeners","touchmove","touchMoveEvent","onMousemove","mouseMoveEvent","resizable","resizableContainer","eventName","ResizeHandleDirective_Factory","ResizableModule","ResizableModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope"],"sources":["C:/Users/Utilizador/Desktop/PVGym/PVGymAngularClient/ClientApp/node_modules/angular-resizable-element/__ivy_ngcc__/fesm2015/angular-resizable-element.js"],"sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Directive, Renderer2, ElementRef, Output, Input, EventEmitter, NgZone, Inject, PLATFORM_ID, Optional, NgModule } from '@angular/core';\nimport { Subject, Observable, merge, EMPTY, fromEvent } from 'rxjs';\nimport { map, mergeMap, takeUntil, filter, pairwise, take, share, auditTime, switchMap, startWith, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @hidden\n * @type {?}\n */\nimport * as Éµngcc0 from '@angular/core';\nconst IS_TOUCH_DEVICE = (() => {\n    // In case we're in Node.js environment.\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    else {\n        return ('ontouchstart' in window ||\n            navigator.maxTouchPoints > 0 ||\n            navigator.msMaxTouchPoints > 0);\n    }\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value1\n * @param {?} value2\n * @param {?=} precision\n * @return {?}\n */\nfunction isNumberCloseTo(value1, value2, precision = 3) {\n    /** @type {?} */\n    const diff = Math.abs(value1 - value2);\n    return diff < precision;\n}\n/**\n * @param {?} startingRect\n * @param {?} edges\n * @param {?} clientX\n * @param {?} clientY\n * @return {?}\n */\nfunction getNewBoundingRectangle(startingRect, edges, clientX, clientY) {\n    /** @type {?} */\n    const newBoundingRect = {\n        top: startingRect.top,\n        bottom: startingRect.bottom,\n        left: startingRect.left,\n        right: startingRect.right\n    };\n    if (edges.top) {\n        newBoundingRect.top += clientY;\n    }\n    if (edges.bottom) {\n        newBoundingRect.bottom += clientY;\n    }\n    if (edges.left) {\n        newBoundingRect.left += clientX;\n    }\n    if (edges.right) {\n        newBoundingRect.right += clientX;\n    }\n    newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n    newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n    return newBoundingRect;\n}\n/**\n * @param {?} element\n * @param {?} ghostElementPositioning\n * @return {?}\n */\nfunction getElementRect(element, ghostElementPositioning) {\n    /** @type {?} */\n    let translateX = 0;\n    /** @type {?} */\n    let translateY = 0;\n    /** @type {?} */\n    const style = element.nativeElement.style;\n    /** @type {?} */\n    const transformProperties = [\n        'transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n    ];\n    /** @type {?} */\n    const transform = transformProperties\n        .map(property => style[property])\n        .find(value => !!value);\n    if (transform && transform.includes('translate')) {\n        translateX = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$1');\n        translateY = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$2');\n    }\n    if (ghostElementPositioning === 'absolute') {\n        return {\n            height: element.nativeElement.offsetHeight,\n            width: element.nativeElement.offsetWidth,\n            top: element.nativeElement.offsetTop - translateY,\n            bottom: element.nativeElement.offsetHeight +\n                element.nativeElement.offsetTop -\n                translateY,\n            left: element.nativeElement.offsetLeft - translateX,\n            right: element.nativeElement.offsetWidth +\n                element.nativeElement.offsetLeft -\n                translateX\n        };\n    }\n    else {\n        /** @type {?} */\n        const boundingRect = element.nativeElement.getBoundingClientRect();\n        return {\n            height: boundingRect.height,\n            width: boundingRect.width,\n            top: boundingRect.top - translateY,\n            bottom: boundingRect.bottom - translateY,\n            left: boundingRect.left - translateX,\n            right: boundingRect.right - translateX,\n            scrollTop: element.nativeElement.scrollTop,\n            scrollLeft: element.nativeElement.scrollLeft\n        };\n    }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction isWithinBoundingY({ clientY, rect }) {\n    return clientY >= rect.top && clientY <= rect.bottom;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction isWithinBoundingX({ clientX, rect }) {\n    return clientX >= rect.left && clientX <= rect.right;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getResizeEdges({ clientX, clientY, elm, allowedEdges, cursorPrecision }) {\n    /** @type {?} */\n    const elmPosition = elm.nativeElement.getBoundingClientRect();\n    /** @type {?} */\n    const edges = {};\n    if (allowedEdges.left &&\n        isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) &&\n        isWithinBoundingY({ clientY, rect: elmPosition })) {\n        edges.left = true;\n    }\n    if (allowedEdges.right &&\n        isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) &&\n        isWithinBoundingY({ clientY, rect: elmPosition })) {\n        edges.right = true;\n    }\n    if (allowedEdges.top &&\n        isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) &&\n        isWithinBoundingX({ clientX, rect: elmPosition })) {\n        edges.top = true;\n    }\n    if (allowedEdges.bottom &&\n        isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) &&\n        isWithinBoundingX({ clientX, rect: elmPosition })) {\n        edges.bottom = true;\n    }\n    return edges;\n}\n/** @type {?} */\nconst DEFAULT_RESIZE_CURSORS = Object.freeze({\n    topLeft: 'nw-resize',\n    topRight: 'ne-resize',\n    bottomLeft: 'sw-resize',\n    bottomRight: 'se-resize',\n    leftOrRight: 'col-resize',\n    topOrBottom: 'row-resize'\n});\n/**\n * @param {?} edges\n * @param {?} cursors\n * @return {?}\n */\nfunction getResizeCursor(edges, cursors) {\n    if (edges.left && edges.top) {\n        return cursors.topLeft;\n    }\n    else if (edges.right && edges.top) {\n        return cursors.topRight;\n    }\n    else if (edges.left && edges.bottom) {\n        return cursors.bottomLeft;\n    }\n    else if (edges.right && edges.bottom) {\n        return cursors.bottomRight;\n    }\n    else if (edges.left || edges.right) {\n        return cursors.leftOrRight;\n    }\n    else if (edges.top || edges.bottom) {\n        return cursors.topOrBottom;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getEdgesDiff({ edges, initialRectangle, newRectangle }) {\n    /** @type {?} */\n    const edgesDiff = {};\n    Object.keys(edges).forEach(edge => {\n        edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n    });\n    return edgesDiff;\n}\n/** @type {?} */\nconst RESIZE_ACTIVE_CLASS = 'resize-active';\n/** @type {?} */\nconst RESIZE_LEFT_HOVER_CLASS = 'resize-left-hover';\n/** @type {?} */\nconst RESIZE_RIGHT_HOVER_CLASS = 'resize-right-hover';\n/** @type {?} */\nconst RESIZE_TOP_HOVER_CLASS = 'resize-top-hover';\n/** @type {?} */\nconst RESIZE_BOTTOM_HOVER_CLASS = 'resize-bottom-hover';\n/** @type {?} */\nconst RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';\n/** @type {?} */\nconst MOUSE_MOVE_THROTTLE_MS = 50;\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizableDirective {\n    /**\n     * @hidden\n     * @param {?} platformId\n     * @param {?} renderer\n     * @param {?} elm\n     * @param {?} zone\n     */\n    constructor(platformId, renderer, elm, zone) {\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.elm = elm;\n        this.zone = zone;\n        /**\n         * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n         * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize\n         */\n        this.resizeEdges = {};\n        /**\n         * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n         */\n        this.enableGhostResize = false;\n        /**\n         * A snap grid that resize events will be locked to.\n         *\n         * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n         */\n        this.resizeSnapGrid = {};\n        /**\n         * The mouse cursors that will be set on the resize edges\n         */\n        this.resizeCursors = DEFAULT_RESIZE_CURSORS;\n        /**\n         * Mouse over thickness to active cursor.\n         * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element\n         */\n        this.resizeCursorPrecision = 3;\n        /**\n         * Define the positioning of the ghost element (can be fixed or absolute)\n         */\n        this.ghostElementPositioning = 'fixed';\n        /**\n         * Allow elements to be resized to negative dimensions\n         */\n        this.allowNegativeResizes = false;\n        /**\n         * The mouse move throttle in milliseconds, default: 50 ms\n         */\n        this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;\n        /**\n         * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeStart = new EventEmitter();\n        /**\n         * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n         */\n        this.resizing = new EventEmitter();\n        /**\n         * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.mouseup = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousedown = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousemove = new Subject();\n        this.destroy$ = new Subject();\n        this.resizeEdges$ = new Subject();\n        this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const mousedown$ = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n        /** @type {?} */\n        const mousemove$ = merge(this.pointerEventListeners.pointerMove, this.mousemove).pipe(tap(({ event }) => {\n            if (currentResize) {\n                try {\n                    event.preventDefault();\n                }\n                catch (e) {\n                    // just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\n                    // browser does nothing except of writing errors to console\n                }\n            }\n        }), share());\n        /** @type {?} */\n        const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n        /** @type {?} */\n        let currentResize;\n        /** @type {?} */\n        const removeGhostElement = () => {\n            if (currentResize && currentResize.clonedNode) {\n                this.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n            }\n        };\n        /** @type {?} */\n        const getResizeCursors = () => {\n            return Object.assign({}, DEFAULT_RESIZE_CURSORS, this.resizeCursors);\n        };\n        this.resizeEdges$\n            .pipe(startWith(this.resizeEdges), map(() => {\n            return (this.resizeEdges &&\n                Object.keys(this.resizeEdges).some(edge => !!this.resizeEdges[edge]));\n        }), switchMap(legacyResizeEdgesEnabled => legacyResizeEdgesEnabled ? mousemove$ : EMPTY), auditTime(this.mouseMoveThrottleMS), takeUntil(this.destroy$))\n            .subscribe(({ clientX, clientY }) => {\n            /** @type {?} */\n            const resizeEdges = getResizeEdges({\n                clientX,\n                clientY,\n                elm: this.elm,\n                allowedEdges: this.resizeEdges,\n                cursorPrecision: this.resizeCursorPrecision\n            });\n            /** @type {?} */\n            const resizeCursors = getResizeCursors();\n            if (!currentResize) {\n                /** @type {?} */\n                const cursor = getResizeCursor(resizeEdges, resizeCursors);\n                this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n            }\n            this.setElementClass(this.elm, RESIZE_LEFT_HOVER_CLASS, resizeEdges.left === true);\n            this.setElementClass(this.elm, RESIZE_RIGHT_HOVER_CLASS, resizeEdges.right === true);\n            this.setElementClass(this.elm, RESIZE_TOP_HOVER_CLASS, resizeEdges.top === true);\n            this.setElementClass(this.elm, RESIZE_BOTTOM_HOVER_CLASS, resizeEdges.bottom === true);\n        });\n        /** @type {?} */\n        const mousedrag = mousedown$\n            .pipe(mergeMap(startCoords => {\n            /**\n             * @param {?} moveCoords\n             * @return {?}\n             */\n            function getDiff(moveCoords) {\n                return {\n                    clientX: moveCoords.clientX - startCoords.clientX,\n                    clientY: moveCoords.clientY - startCoords.clientY\n                };\n            }\n            /** @type {?} */\n            const getSnapGrid = () => {\n                /** @type {?} */\n                const snapGrid = { x: 1, y: 1 };\n                if (currentResize) {\n                    if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                        snapGrid.x = +this.resizeSnapGrid.left;\n                    }\n                    else if (this.resizeSnapGrid.right &&\n                        currentResize.edges.right) {\n                        snapGrid.x = +this.resizeSnapGrid.right;\n                    }\n                    if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                        snapGrid.y = +this.resizeSnapGrid.top;\n                    }\n                    else if (this.resizeSnapGrid.bottom &&\n                        currentResize.edges.bottom) {\n                        snapGrid.y = +this.resizeSnapGrid.bottom;\n                    }\n                }\n                return snapGrid;\n            };\n            /**\n             * @param {?} coords\n             * @param {?} snapGrid\n             * @return {?}\n             */\n            function getGrid(coords, snapGrid) {\n                return {\n                    x: Math.ceil(coords.clientX / snapGrid.x),\n                    y: Math.ceil(coords.clientY / snapGrid.y)\n                };\n            }\n            return ((/** @type {?} */ (merge(mousemove$.pipe(take(1)).pipe(map(coords => [, coords])), mousemove$.pipe(pairwise())))))\n                .pipe(map(([previousCoords, newCoords]) => {\n                return [\n                    previousCoords ? getDiff(previousCoords) : previousCoords,\n                    getDiff(newCoords)\n                ];\n            }))\n                .pipe(filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                    return true;\n                }\n                /** @type {?} */\n                const snapGrid = getSnapGrid();\n                /** @type {?} */\n                const previousGrid = getGrid(previousCoords, snapGrid);\n                /** @type {?} */\n                const newGrid = getGrid(newCoords, snapGrid);\n                return (previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y);\n            }))\n                .pipe(map(([, newCoords]) => {\n                /** @type {?} */\n                const snapGrid = getSnapGrid();\n                return {\n                    clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                    clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n            }))\n                .pipe(takeUntil(merge(mouseup$, mousedown$)));\n        }))\n            .pipe(filter(() => !!currentResize));\n        mousedrag\n            .pipe(map(({ clientX, clientY }) => {\n            return getNewBoundingRectangle((/** @type {?} */ (currentResize)).startingRect, (/** @type {?} */ (currentResize)).edges, clientX, clientY);\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return (this.allowNegativeResizes ||\n                !!(newBoundingRect.height &&\n                    newBoundingRect.width &&\n                    newBoundingRect.height > 0 &&\n                    newBoundingRect.width > 0));\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return this.validateResize\n                ? this.validateResize({\n                    rectangle: newBoundingRect,\n                    edges: getEdgesDiff({\n                        edges: (/** @type {?} */ (currentResize)).edges,\n                        initialRectangle: (/** @type {?} */ (currentResize)).startingRect,\n                        newRectangle: newBoundingRect\n                    })\n                })\n                : true;\n        }), takeUntil(this.destroy$))\n            .subscribe((newBoundingRect) => {\n            if (currentResize && currentResize.clonedNode) {\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${newBoundingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${newBoundingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${newBoundingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${newBoundingRect.left}px`);\n            }\n            if (this.resizing.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizing.emit({\n                        edges: getEdgesDiff({\n                            edges: (/** @type {?} */ (currentResize)).edges,\n                            initialRectangle: (/** @type {?} */ (currentResize)).startingRect,\n                            newRectangle: newBoundingRect\n                        }),\n                        rectangle: newBoundingRect\n                    });\n                });\n            }\n            (/** @type {?} */ (currentResize)).currentRect = newBoundingRect;\n        });\n        mousedown$\n            .pipe(map(({ clientX, clientY, edges }) => {\n            return (edges ||\n                getResizeEdges({\n                    clientX,\n                    clientY,\n                    elm: this.elm,\n                    allowedEdges: this.resizeEdges,\n                    cursorPrecision: this.resizeCursorPrecision\n                }));\n        }))\n            .pipe(filter((edges) => {\n            return Object.keys(edges).length > 0;\n        }), takeUntil(this.destroy$))\n            .subscribe((edges) => {\n            if (currentResize) {\n                removeGhostElement();\n            }\n            /** @type {?} */\n            const startingRect = getElementRect(this.elm, this.ghostElementPositioning);\n            currentResize = {\n                edges,\n                startingRect,\n                currentRect: startingRect\n            };\n            /** @type {?} */\n            const resizeCursors = getResizeCursors();\n            /** @type {?} */\n            const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n            this.renderer.setStyle(document.body, 'cursor', cursor);\n            this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n            if (this.enableGhostResize) {\n                currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n                this.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'hidden');\n                this.renderer.setStyle(currentResize.clonedNode, 'position', this.ghostElementPositioning);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${currentResize.startingRect.left}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${currentResize.startingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${currentResize.startingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${currentResize.startingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));\n                this.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);\n                (/** @type {?} */ (currentResize.clonedNode)).scrollTop = (/** @type {?} */ (currentResize.startingRect\n                    .scrollTop));\n                (/** @type {?} */ (currentResize.clonedNode)).scrollLeft = (/** @type {?} */ (currentResize.startingRect\n                    .scrollLeft));\n            }\n            if (this.resizeStart.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizeStart.emit({\n                        edges: getEdgesDiff({\n                            edges,\n                            initialRectangle: startingRect,\n                            newRectangle: startingRect\n                        }),\n                        rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n                    });\n                });\n            }\n        });\n        mouseup$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            if (currentResize) {\n                this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n                this.renderer.setStyle(document.body, 'cursor', '');\n                this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n                if (this.resizeEnd.observers.length > 0) {\n                    this.zone.run(() => {\n                        this.resizeEnd.emit({\n                            edges: getEdgesDiff({\n                                edges: (/** @type {?} */ (currentResize)).edges,\n                                initialRectangle: (/** @type {?} */ (currentResize)).startingRect,\n                                newRectangle: (/** @type {?} */ (currentResize)).currentRect\n                            }),\n                            rectangle: (/** @type {?} */ (currentResize)).currentRect\n                        });\n                    });\n                }\n                removeGhostElement();\n                currentResize = null;\n            }\n        });\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.resizeEdges) {\n            this.resizeEdges$.next(this.resizeEdges);\n        }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // browser check for angular universal, because it doesn't know what document is\n        if (isPlatformBrowser(this.platformId)) {\n            this.renderer.setStyle(document.body, 'cursor', '');\n        }\n        this.mousedown.complete();\n        this.mouseup.complete();\n        this.mousemove.complete();\n        this.resizeEdges$.complete();\n        this.destroy$.next();\n    }\n    /**\n     * @private\n     * @param {?} elm\n     * @param {?} name\n     * @param {?} add\n     * @return {?}\n     */\n    setElementClass(elm, name, add) {\n        if (add) {\n            this.renderer.addClass(elm.nativeElement, name);\n        }\n        else {\n            this.renderer.removeClass(elm.nativeElement, name);\n        }\n    }\n}\nResizableDirective.Éµfac = function ResizableDirective_Factory(t) { return new (t || ResizableDirective)(Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nResizableDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: ResizableDirective, selectors: [[\"\", \"mwlResizable\", \"\"]], inputs: { resizeEdges: \"resizeEdges\", enableGhostResize: \"enableGhostResize\", resizeSnapGrid: \"resizeSnapGrid\", resizeCursors: \"resizeCursors\", resizeCursorPrecision: \"resizeCursorPrecision\", ghostElementPositioning: \"ghostElementPositioning\", allowNegativeResizes: \"allowNegativeResizes\", mouseMoveThrottleMS: \"mouseMoveThrottleMS\", validateResize: \"validateResize\" }, outputs: { resizeStart: \"resizeStart\", resizing: \"resizing\", resizeEnd: \"resizeEnd\" }, exportAs: [\"mwlResizable\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\n/** @nocollapse */\nResizableDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NgZone }\n];\nResizableDirective.propDecorators = {\n    validateResize: [{ type: Input }],\n    resizeEdges: [{ type: Input }],\n    enableGhostResize: [{ type: Input }],\n    resizeSnapGrid: [{ type: Input }],\n    resizeCursors: [{ type: Input }],\n    resizeCursorPrecision: [{ type: Input }],\n    ghostElementPositioning: [{ type: Input }],\n    allowNegativeResizes: [{ type: Input }],\n    mouseMoveThrottleMS: [{ type: Input }],\n    resizeStart: [{ type: Output }],\n    resizing: [{ type: Output }],\n    resizeEnd: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlResizable]',\n                exportAs: 'mwlResizable'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: Éµngcc0.Renderer2 }, { type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }]; }, { resizeEdges: [{\n            type: Input\n        }], enableGhostResize: [{\n            type: Input\n        }], resizeSnapGrid: [{\n            type: Input\n        }], resizeCursors: [{\n            type: Input\n        }], resizeCursorPrecision: [{\n            type: Input\n        }], ghostElementPositioning: [{\n            type: Input\n        }], allowNegativeResizes: [{\n            type: Input\n        }], mouseMoveThrottleMS: [{\n            type: Input\n        }], resizeStart: [{\n            type: Output\n        }], resizing: [{\n            type: Output\n        }], resizeEnd: [{\n            type: Output\n        }], validateResize: [{\n            type: Input\n        }] }); })();\nclass PointerEventListeners {\n    // tslint:disable-line\n    /**\n     * @param {?} renderer\n     * @param {?} zone\n     * @return {?}\n     */\n    static getInstance(renderer, zone) {\n        if (!PointerEventListeners.instance) {\n            PointerEventListeners.instance = new PointerEventListeners(renderer, zone);\n        }\n        return PointerEventListeners.instance;\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} zone\n     */\n    constructor(renderer, zone) {\n        this.pointerDown = new Observable((observer) => {\n            /** @type {?} */\n            let unsubscribeMouseDown;\n            /** @type {?} */\n            let unsubscribeTouchStart;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseDown = renderer.listen('document', 'mousedown', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchStart = renderer.listen('document', 'touchstart', (event) => {\n                        observer.next({\n                            clientX: event.touches[0].clientX,\n                            clientY: event.touches[0].clientY,\n                            event\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseDown();\n                if (IS_TOUCH_DEVICE) {\n                    (/** @type {?} */ (unsubscribeTouchStart))();\n                }\n            };\n        }).pipe(share());\n        this.pointerMove = new Observable((observer) => {\n            /** @type {?} */\n            let unsubscribeMouseMove;\n            /** @type {?} */\n            let unsubscribeTouchMove;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseMove = renderer.listen('document', 'mousemove', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchMove = renderer.listen('document', 'touchmove', (event) => {\n                        observer.next({\n                            clientX: event.targetTouches[0].clientX,\n                            clientY: event.targetTouches[0].clientY,\n                            event\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseMove();\n                if (IS_TOUCH_DEVICE) {\n                    (/** @type {?} */ (unsubscribeTouchMove))();\n                }\n            };\n        }).pipe(share());\n        this.pointerUp = new Observable((observer) => {\n            /** @type {?} */\n            let unsubscribeMouseUp;\n            /** @type {?} */\n            let unsubscribeTouchEnd;\n            /** @type {?} */\n            let unsubscribeTouchCancel;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseUp = renderer.listen('document', 'mouseup', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchEnd = renderer.listen('document', 'touchend', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event\n                        });\n                    });\n                    unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseUp();\n                if (IS_TOUCH_DEVICE) {\n                    (/** @type {?} */ (unsubscribeTouchEnd))();\n                    (/** @type {?} */ (unsubscribeTouchCancel))();\n                }\n            };\n        }).pipe(share());\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizeHandleDirective {\n    /**\n     * @param {?} renderer\n     * @param {?} element\n     * @param {?} zone\n     * @param {?} resizableDirective\n     */\n    constructor(renderer, element, zone, resizableDirective) {\n        this.renderer = renderer;\n        this.element = element;\n        this.zone = zone;\n        this.resizableDirective = resizableDirective;\n        /**\n         * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n         */\n        this.resizeEdges = {};\n        this.eventListeners = {};\n        this.destroy$ = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.zone.runOutsideAngular(() => {\n            this.listenOnTheHost('mousedown').subscribe(event => {\n                this.onMousedown(event, event.clientX, event.clientY);\n            });\n            this.listenOnTheHost('mouseup').subscribe(event => {\n                this.onMouseup(event.clientX, event.clientY);\n            });\n            if (IS_TOUCH_DEVICE) {\n                this.listenOnTheHost('touchstart').subscribe(event => {\n                    this.onMousedown(event, event.touches[0].clientX, event.touches[0].clientY);\n                });\n                merge(this.listenOnTheHost('touchend'), this.listenOnTheHost('touchcancel')).subscribe(event => {\n                    this.onMouseup(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n                });\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.unsubscribeEventListeners();\n    }\n    /**\n     * @hidden\n     * @param {?} event\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n    onMousedown(event, clientX, clientY) {\n        event.preventDefault();\n        if (!this.eventListeners.touchmove) {\n            this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', (touchMoveEvent) => {\n                this.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);\n            });\n        }\n        if (!this.eventListeners.mousemove) {\n            this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', (mouseMoveEvent) => {\n                this.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);\n            });\n        }\n        this.resizable.mousedown.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges\n        });\n    }\n    /**\n     * @hidden\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n    onMouseup(clientX, clientY) {\n        this.unsubscribeEventListeners();\n        this.resizable.mouseup.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges\n        });\n    }\n    // directive might be passed from DI or as an input\n    /**\n     * @private\n     * @return {?}\n     */\n    get resizable() {\n        return this.resizableDirective || this.resizableContainer;\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n    onMousemove(event, clientX, clientY) {\n        this.resizable.mousemove.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n            event\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    unsubscribeEventListeners() {\n        Object.keys(this.eventListeners).forEach(type => {\n            ((/** @type {?} */ (this))).eventListeners[type]();\n            delete this.eventListeners[type];\n        });\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} eventName\n     * @return {?}\n     */\n    listenOnTheHost(eventName) {\n        return fromEvent(this.element.nativeElement, eventName).pipe(takeUntil(this.destroy$));\n    }\n}\nResizeHandleDirective.Éµfac = function ResizeHandleDirective_Factory(t) { return new (t || ResizeHandleDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(ResizableDirective, 8)); };\nResizeHandleDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: ResizeHandleDirective, selectors: [[\"\", \"mwlResizeHandle\", \"\"]], inputs: { resizeEdges: \"resizeEdges\", resizableContainer: \"resizableContainer\" } });\n/** @nocollapse */\nResizeHandleDirective.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ResizableDirective, decorators: [{ type: Optional }] }\n];\nResizeHandleDirective.propDecorators = {\n    resizeEdges: [{ type: Input }],\n    resizableContainer: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizeHandleDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlResizeHandle]'\n            }]\n    }], function () { return [{ type: Éµngcc0.Renderer2 }, { type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }, { type: ResizableDirective, decorators: [{\n                type: Optional\n            }] }]; }, { resizeEdges: [{\n            type: Input\n        }], resizableContainer: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ResizableModule {\n}\nResizableModule.Éµfac = function ResizableModule_Factory(t) { return new (t || ResizableModule)(); };\nResizableModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: ResizableModule });\nResizableModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ResizableDirective, ResizeHandleDirective],\n                exports: [ResizableDirective, ResizeHandleDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(ResizableModule, { declarations: [ResizableDirective, ResizeHandleDirective], exports: [ResizableDirective, ResizeHandleDirective] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ResizableDirective, ResizeHandleDirective, ResizableModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}